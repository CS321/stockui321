/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Stocks.*;
import Structure.EmptyTableException;
import Structure.StructuredTable;
import Structure.Table;
import System.Database;
import System.DatabaseReadException;
import TextUI.*;
import Users.Accounts;
import Users.BadUserOrPasswordException;
import Users.MD5;
import java.awt.CardLayout;
import java.awt.Event;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author WilsonZD
 */


public class Frame extends javax.swing.JFrame 
{
    
     Accounts a;
     Model model = new Model();
     Market m = Market.getInstance();
     
     
    
        

    @Override
    public boolean action(Event event, Object o) {
        return super.action(event, o); //To change body of generated methods, choose Tools | Templates.
    }
    
    private final static Logger LOGGER = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);

        
    
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        
        CardLayout card = (CardLayout)MainPanel.getLayout();
        card.show(MainPanel, "first");
         CardLayout card2 = (CardLayout)DisplayPanel.getLayout();
        card2.show(DisplayPanel, "empty");
        
        LogoutButton.setEnabled(false);
        
        try 
        {
            a = Database.retrieveAccounts();
            
            model.setAccounts(a);

            
        } catch (DatabaseReadException e) 
        {
            a = new Accounts();
            model.setAccounts(a);
        }
        
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"There are no accounts! Please Create an Account!!","No Accounts",JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonPanel = new javax.swing.JPanel();
        LoginButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        DisplayPanel = new javax.swing.JPanel();
        PortfilioViewPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        a_portfolio = new javax.swing.JTextArea();
        EmptyPanel = new javax.swing.JPanel();
        LotViewPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        a_lot = new javax.swing.JTextArea();
        ClosedPosPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        a_closed = new javax.swing.JTextArea();
        StockLookUpPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        a_lookup = new javax.swing.JTextArea();
        BuyStockPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        a_buy = new javax.swing.JTextArea();
        MainPanel = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        t_password = new javax.swing.JTextField();
        t_username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b_create = new javax.swing.JButton();
        OptionPanel = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        l_username = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        CreatePanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        b_create1 = new javax.swing.JButton();
        b_cancel = new javax.swing.JButton();
        PortfolioPanel = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        MarketPanel = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        LookUpPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        t_lookup = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        BuyPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        t_buy = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        BidPanel = new javax.swing.JPanel();
        l_stock = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        t_amount = new javax.swing.JTextField();
        t_bid = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(LoginButton);

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(LogoutButton);

        DisplayPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DisplayPanel.setLayout(new java.awt.CardLayout());

        a_portfolio.setColumns(20);
        a_portfolio.setRows(5);
        jScrollPane1.setViewportView(a_portfolio);

        javax.swing.GroupLayout PortfilioViewPanelLayout = new javax.swing.GroupLayout(PortfilioViewPanel);
        PortfilioViewPanel.setLayout(PortfilioViewPanelLayout);
        PortfilioViewPanelLayout.setHorizontalGroup(
            PortfilioViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        PortfilioViewPanelLayout.setVerticalGroup(
            PortfilioViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(PortfilioViewPanel, "portfolioview");

        javax.swing.GroupLayout EmptyPanelLayout = new javax.swing.GroupLayout(EmptyPanel);
        EmptyPanel.setLayout(EmptyPanelLayout);
        EmptyPanelLayout.setHorizontalGroup(
            EmptyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 737, Short.MAX_VALUE)
        );
        EmptyPanelLayout.setVerticalGroup(
            EmptyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(EmptyPanel, "empty");

        a_lot.setColumns(20);
        a_lot.setRows(5);
        jScrollPane2.setViewportView(a_lot);

        javax.swing.GroupLayout LotViewPanelLayout = new javax.swing.GroupLayout(LotViewPanel);
        LotViewPanel.setLayout(LotViewPanelLayout);
        LotViewPanelLayout.setHorizontalGroup(
            LotViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        LotViewPanelLayout.setVerticalGroup(
            LotViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(LotViewPanel, "lotview");

        a_closed.setColumns(20);
        a_closed.setRows(5);
        jScrollPane3.setViewportView(a_closed);

        javax.swing.GroupLayout ClosedPosPanelLayout = new javax.swing.GroupLayout(ClosedPosPanel);
        ClosedPosPanel.setLayout(ClosedPosPanelLayout);
        ClosedPosPanelLayout.setHorizontalGroup(
            ClosedPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        ClosedPosPanelLayout.setVerticalGroup(
            ClosedPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(ClosedPosPanel, "closedview");

        a_lookup.setColumns(20);
        a_lookup.setRows(5);
        jScrollPane4.setViewportView(a_lookup);

        javax.swing.GroupLayout StockLookUpPanelLayout = new javax.swing.GroupLayout(StockLookUpPanel);
        StockLookUpPanel.setLayout(StockLookUpPanelLayout);
        StockLookUpPanelLayout.setHorizontalGroup(
            StockLookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        StockLookUpPanelLayout.setVerticalGroup(
            StockLookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(StockLookUpPanel, "lookup2");

        a_buy.setColumns(20);
        a_buy.setRows(5);
        jScrollPane5.setViewportView(a_buy);

        javax.swing.GroupLayout BuyStockPanelLayout = new javax.swing.GroupLayout(BuyStockPanel);
        BuyStockPanel.setLayout(BuyStockPanelLayout);
        BuyStockPanelLayout.setHorizontalGroup(
            BuyStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        BuyStockPanelLayout.setVerticalGroup(
            BuyStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        DisplayPanel.add(BuyStockPanel, "buy2");

        MainPanel.setToolTipText("MainPanel");
        MainPanel.setLayout(new java.awt.CardLayout());

        LoginPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        t_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_usernameActionPerformed(evt);
            }
        });

        jLabel3.setText("Username");

        jLabel2.setText("Password");

        b_create.setText("Create Account");
        b_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_createActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_create)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t_password)
                            .addComponent(t_username, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(t_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(b_create)
                .addContainerGap())
        );

        MainPanel.add(LoginPanel, "first");

        OptionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton3.setText("Closed Position Table");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Transactions Log");

        jButton1.setText("Portfolio Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Lot Table");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        l_username.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton9.setText("Market");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OptionPanelLayout = new javax.swing.GroupLayout(OptionPanel);
        OptionPanel.setLayout(OptionPanelLayout);
        OptionPanelLayout.setHorizontalGroup(
            OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(l_username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        OptionPanelLayout.setVerticalGroup(
            OptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(l_username, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(13, 13, 13)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        MainPanel.add(OptionPanel, "second");

        CreatePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("UserName");

        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Create Account");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        b_create1.setText("Create");
        b_create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_create1ActionPerformed(evt);
            }
        });

        b_cancel.setText("Cancel");
        b_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b_create1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_cancel)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_create1)
                    .addComponent(b_cancel))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout CreatePanelLayout = new javax.swing.GroupLayout(CreatePanel);
        CreatePanel.setLayout(CreatePanelLayout);
        CreatePanelLayout.setHorizontalGroup(
            CreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
            .addGroup(CreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CreatePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        CreatePanelLayout.setVerticalGroup(
            CreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
            .addGroup(CreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreatePanelLayout.createSequentialGroup()
                    .addContainerGap(50, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        MainPanel.add(CreatePanel, "third");

        jButton5.setText("jButton5");

        jButton6.setText("jButton6");

        jButton7.setText("jButton7");

        jButton8.setText("jButton8");

        javax.swing.GroupLayout PortfolioPanelLayout = new javax.swing.GroupLayout(PortfolioPanel);
        PortfolioPanel.setLayout(PortfolioPanelLayout);
        PortfolioPanelLayout.setHorizontalGroup(
            PortfolioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PortfolioPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(PortfolioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(jButton7)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        PortfolioPanelLayout.setVerticalGroup(
            PortfolioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PortfolioPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        MainPanel.add(PortfolioPanel, "card5");

        MarketPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton10.setText("Look Up Stock");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Buy Stock");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Sell Stock");

        jButton13.setText("Main Menu");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MarketPanelLayout = new javax.swing.GroupLayout(MarketPanel);
        MarketPanel.setLayout(MarketPanelLayout);
        MarketPanelLayout.setHorizontalGroup(
            MarketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarketPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(MarketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        MarketPanelLayout.setVerticalGroup(
            MarketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MarketPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton13)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        MainPanel.add(MarketPanel, "market");

        jLabel7.setText("Ticker Symbol:");

        jButton14.setText("Look Up");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Back");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LookUpPanelLayout = new javax.swing.GroupLayout(LookUpPanel);
        LookUpPanel.setLayout(LookUpPanelLayout);
        LookUpPanelLayout.setHorizontalGroup(
            LookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LookUpPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_lookup)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        LookUpPanelLayout.setVerticalGroup(
            LookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LookUpPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(LookUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_lookup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton15)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        MainPanel.add(LookUpPanel, "lookup1");

        BuyPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("Buy Stock:");

        jButton16.setText("Continue");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Back");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BuyPanelLayout = new javax.swing.GroupLayout(BuyPanel);
        BuyPanel.setLayout(BuyPanelLayout);
        BuyPanelLayout.setHorizontalGroup(
            BuyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuyPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BuyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_buy)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        BuyPanelLayout.setVerticalGroup(
            BuyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuyPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(BuyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(t_buy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton17)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        MainPanel.add(BuyPanel, "buy1");

        BidPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("Amount: ");

        jLabel10.setText("Bid      :");

        jButton18.setText("Buy Stocks");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Back");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BidPanelLayout = new javax.swing.GroupLayout(BidPanel);
        BidPanel.setLayout(BidPanelLayout);
        BidPanelLayout.setHorizontalGroup(
            BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BidPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(BidPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(t_bid))
                            .addGroup(BidPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        BidPanelLayout.setVerticalGroup(
            BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BidPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(t_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(t_bid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButton18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton19)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        MainPanel.add(BidPanel, "buy3");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Stock Market Program");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        // TODO add your handling code here:
        
       
         
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "first");
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "empty");
                
        
        
        
        LogoutButton.setEnabled(false);
        LoginButton.setEnabled(true);
        
       
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // TODO add your handling code here:

        
        
       
        
        //StockUI userinterface = new StockUI(a);

        //userinterface.login();
        
        TraderAccount u = null;
        
        try 
        {
          u = a.login(t_username.getText(), MD5.getMD5(t_password.getText()));
          
          model.setTraderAccount(u);
          l_username.setText("Welcome " + t_username.getText());
          
          //System.out.println(model.getTraderAccount().getCashBalance());
        } catch (BadUserOrPasswordException ex) 
        {
              System.out.println("here1");
              
            
        }

        if(u == null) 
        {
            JOptionPane.showMessageDialog(null,"Bad Username or Password, try again.","Bad Login",JOptionPane.WARNING_MESSAGE);
                
            
             CardLayout card = (CardLayout) MainPanel.getLayout();
                card.show(MainPanel, "first");
            try {
                u = a.login(t_username.getText(), MD5.getMD5(t_password.getText()));
                model.setTraderAccount(u);
            } catch (BadUserOrPasswordException ex) 
            {
                System.out.println("here2");
                        
            }
        }
        
        if(u != null)
        {
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "second");
        
        LoginButton.setEnabled(false);
        LogoutButton.setEnabled(true);
        }
    
           
        
      
        
        
       
        
        





    }//GEN-LAST:event_LoginButtonActionPerformed

    private void b_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_createActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "third");
        
        
        LoginButton.setEnabled(false);
        LogoutButton.setEnabled(false);
        
       
        
        
        
    }//GEN-LAST:event_b_createActionPerformed

    private void t_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_usernameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //System.out.println("IN FUNCTION");
        
        a_portfolio.setText("");
        
        CardLayout card = (CardLayout) DisplayPanel.getLayout();
        card.show(DisplayPanel, "portfolioview");
        
        
        //System.out.println("PANEL DISPLAYED");
        
        boolean p_sit = true;
       // while (p_sit) {

            //System.out.println("\n");
            //System.out.println("B4 MARKET UPDATE");
            m.updateMarket();
            //System.out.println("AFTER MARKET UPDATE");

            StructuredTable p = null;

            try {
                p = model.getTraderAccount().getPortfolio();
            } catch (EmptyTableException e) {
            }
            double marketBalance = 0;

            if (p != null && !p.isEmpty()) {
                Iterator i = p.IterateRow();
                while (i.hasNext()) {
                    List l = (List) i.next();
                    marketBalance += (Integer) l.get(2) * m.getPrice((String) l.get(0));
                }
            }

            //a_portfolio.append(model.getTraderAccount().getUsername() + "/n");
            a_portfolio.append("Cash Balance: " + String.format("%.2f", model.getTraderAccount().getCashBalance()) + "\n");
            a_portfolio.append("Market Balance: " + String.format("%.2f", marketBalance) + "\n");
            a_portfolio.append("\n");

            //System.out.println("Select an option below to view your portfolio:");
            //Table<String> options = new Table<String>();
            //options.addRow(Arrays.asList("1", "Sort by Ticker Name"));
            //options.addRow(Arrays.asList("2", "Sort by Number Owned"));
            //options.addRow(Arrays.asList("3", "Sort by Price Paid"));
            //options.addRow(Arrays.asList("4", "Sort by Date"));
            //options.addRow(Arrays.asList("5", "Sort by Dollars Gained"));
            //options.addRow(Arrays.asList("6", "Sort by Percentage Gained"));

            //options.addRow(Arrays.asList("e", "Return to Main Menu"));

            //String selected = Prompt.menuPrompt(options);
            Table<String> ascdesc = new Table<String>();
            ascdesc.addRow(Arrays.asList("a", "Ascending"));
            ascdesc.addRow(Arrays.asList("d", "Descending"));
            int col = -1;
            boolean asc;

            /*switch (selected.charAt(0)) {
                case '1':
                    col = 0;
                    break;
                case '2':
                    col = 2;
                    break;
                case '3':
                    col = 3;
                    break;
                case '4':
                    col = 1;
                    break;
                case '5':
                    col = 4;
                    break;
                case '6':
                    col = 7;
                    break;
                case 'e':
                    p_sit = false;
                    continue;
            }*/

            //asc = Prompt.menuPrompt(ascdesc).equals("a");
            
            portfolioPrint(p, col);
        //}
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void b_create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_create1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_b_create1ActionPerformed

    private void b_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelActionPerformed
        // TODO add your handling code here:
        
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "first");
        
        
        LoginButton.setEnabled(true);
        
        
    }//GEN-LAST:event_b_cancelActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
         CardLayout card = (CardLayout) DisplayPanel.getLayout();
         card.show(DisplayPanel, "lotview");
         a_lot.setText("");
         
          //while (l_sit) {

            //System.out.println("\n");
            m.updateMarket();

            StructuredTable p = null;

            try {
                p = model.getTraderAccount().getLots();
            } catch (EmptyTableException e) {
            }
            double marketBalance = 0;

            if (p != null && !p.isEmpty()) {
                Iterator i = p.IterateRow();
                while (i.hasNext()) {
                    List l = (List) i.next();
                    marketBalance += (Integer) l.get(2) * m.getPrice((String) l.get(0));
                }
            }

            //System.out.println(model.getTraderAccount().getUsername());
            a_lot.append("Cash Balance: " + String.format("%.2f", model.getTraderAccount().getCashBalance()) + "\n");
            a_lot.append("Market Balance: " + String.format("%.2f", marketBalance) + "\n");
            a_lot.append("\n");

            //System.out.println("Select an option below to view your lots:");
            Table<String> options = new Table<String>();
            /*options.addRow(Arrays.asList("1", "Sort by Date"));
            options.addRow(Arrays.asList("2", "Sort by Ticker Name"));
            options.addRow(Arrays.asList("3", "Sort by Number Owned"));
            options.addRow(Arrays.asList("4", "Sort by Price Paid"));
            options.addRow(Arrays.asList("5", "Sort by Dollars Gained"));
            options.addRow(Arrays.asList("6", "Sort by Percentage Gained"));*/


            options.addRow(Arrays.asList("e", "Return to Main Menu"));

            //String selected = Prompt.menuPrompt(options);
            Table<String> ascdesc = new Table<String>();
            ascdesc.addRow(Arrays.asList("a", "Ascending"));
            ascdesc.addRow(Arrays.asList("d", "Descending"));
            int col = -1;
            boolean asc;

            /*switch (selected.charAt(0)) {
                case '1':
                    col = 1;
                    break;
                case '2':
                    col = 0;
                    break;
                case '3':
                    col = 2;
                    break;
                case '4':
                    col = 3;
                    break;
                case '5':
                    col = 4;
                    break;
                case '6':
                    col = 7;
                    break;
                case 'e':
                    l_sit = false;
                    continue;
            }*/

            //asc = Prompt.menuPrompt(ascdesc).equals("a");
            lotPrint(p, col);
        //}
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        
        
        CardLayout card = (CardLayout) DisplayPanel.getLayout();
        card.show(DisplayPanel, "closedview");
        
        a_closed.setText("");
        
        boolean c_sit = true;
       

            //System.out.println("\n");

            StructuredTable p = null;

            try {
                p = model.getTraderAccount().getClosedPositions();
            } catch (EmptyTableException e) {
            }

            //System.out.println(model.getTraderAccount().getUsername());

            /*System.out.println("Select an option below to view your closed positions:");
            Table<String> options = new Table<String>();
            options.addRow(Arrays.asList("1", "Sort by Buy Date"));
            options.addRow(Arrays.asList("2", "Sort by Closed Date"));
            options.addRow(Arrays.asList("3", "Sort by Ticker Name"));
            options.addRow(Arrays.asList("4", "Sort by Number of Shares"));
            options.addRow(Arrays.asList("5", "Sort by Price Paid"));
            options.addRow(Arrays.asList("6", "Sort by Dollars Gained"));*/


            //options.addRow(Arrays.asList("e", "Return to Main Menu"));

            //String selected = Prompt.menuPrompt(options);
            Table<String> ascdesc = new Table<String>();
            ascdesc.addRow(Arrays.asList("a", "Ascending"));
            ascdesc.addRow(Arrays.asList("d", "Descending"));
            int col = -1;
            boolean asc;

            /*switch (selected.charAt(0)) {
                case '1':
                    col = 1;
                    break;
                case '2':
                    col = 2;
                    break;
                case '3':
                    col = 0;
                    break;
                case '4':
                    col = 3;
                    break;
                case '5':
                    col = 4;
                    break;
                case '6':
                    col = 5;
                    break;
                case 'e':
                    c_sit = false;
                    continue;
            }*/

            //asc = Prompt.menuPrompt(ascdesc).equals("a");
            closedPrint(p, col);
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "market");
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "empty");
        
        
        
        
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "second");
        
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        
        a_lookup.setText("");
        
         String ticker;

        ticker = t_lookup.getText();
        
        a_lookup.append("\nTICKER: " + ticker + "\nLAST SELL: " + m.getPrice(ticker)
                + "\nASKING:" + m.getAsk(ticker) + "\nBIDDING: " + m.getBid(ticker));

        //Table<String> meh = new Table<String>();
        //meh.addRow(Arrays.asList("c", "Continue"));
        //Prompt.menuPrompt(meh);
        
        
        
        
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "market");
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "empty");
        
        
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
           CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "lookup1"); 
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "lookup2");
        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "buy1"); 
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "buy2");
        
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        
        a_buy.setText("");
          m.updateMarket();
        
            String ticker;
            ticker = t_buy.getText();
            
                a_buy.append("\nTICKER: " + ticker + "\nLAST SELL: " + m.getPrice(ticker)
                + "\nASKING:" + m.getAsk(ticker) + "\nBIDDING: " + m.getBid(ticker));
        
      
            
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "buy3");
        
     

    
       
        
        
        
        
       
        
        
        
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "market");
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "empty");
        
        
        
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
          CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "buy1");
        
        CardLayout card2 = (CardLayout) DisplayPanel.getLayout();
        card2.show(DisplayPanel, "buy2");
        
        
        
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        
        int numShares;
        double bid;
        
        
        
        numShares = Integer.parseInt(t_amount.getText());
        bid = Double.parseDouble(t_bid.getText());

        try {
            model.getTraderAccount().buy(t_buy.getText(), numShares, bid);
            JOptionPane.showMessageDialog(null,"Stock Purchased","Good Buy",JOptionPane.WARNING_MESSAGE);

        } catch (InvalidTickerException e) {
        JOptionPane.showMessageDialog(null,"Ticker Does Not Exist","No Ticker",JOptionPane.WARNING_MESSAGE);

        } catch (TransactionFailedException e) {
        JOptionPane.showMessageDialog(null,"Can't Buy For Less Than Asking Price","Too Little Price",JOptionPane.WARNING_MESSAGE);

        } catch (NotEnoughCashException e) {
        JOptionPane.showMessageDialog(null,"You Do Not Have Enough Money For That","Not Enough Cash",JOptionPane.WARNING_MESSAGE);

        }

        //Table<String> meh = new Table<String>();
       // meh.addRow(Arrays.asList("c", "Continue"));
        //Prompt.menuPrompt(meh);

        
        
    }//GEN-LAST:event_jButton18ActionPerformed

    
    
    
    
     private void portfolioPrint(StructuredTable p, int col) 

     {
         
         
        StringBuilder sb = new StringBuilder();
         
        if (p != null && !p.isEmpty()) {
            //p.sort(col, ascending);
            Iterator i = p.iterator();

            // Find the maximum length of a string in each column
            int[] lengths = {6, 4, 12, 10, 16, 14, 0, 13};
            int n = 0;
            while (i.hasNext()) {
                int j = 0;
                for (Object elm : (List) i.next()) {
                    lengths[j] = Math.max(elm.toString().length(), lengths[j]);
                    j++;
                }
                n++;
            }
            // "TICKER" "DATE" "SHARES OWNED" "COST BASIS" "UNREALIZED GAINS" "REALIZED GAINS" "PERCENT GAINS"

            // Generate a format string
            String format = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "d "
                    + " %" + lengths[3] + ".2f "
                    + " %" + lengths[4] + ".2f "
                    + " %" + lengths[5] + ".2f "
                    + " %" + lengths[7] + ".2f\n";

            String titleFormat = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "s "
                    + " %" + lengths[3] + "s "
                    + " %" + lengths[4] + "s "
                    + " %" + lengths[5] + "s "
                    + " %" + lengths[7] + "s \n";

            i = p.iterator();

            a_portfolio.append(String.format(titleFormat, "TICKER", "DATE", "SHARES OWNED", "COST BASIS", "UNREALIZED GAINS", "REALIZED GAINS", "PERCENT GAINS"));

            while (i.hasNext()) {
                List l = (List) i.next();
                a_portfolio.append(String.format(format, l.get(0), l.get(1), l.get(2), l.get(3), l.get(4), l.get(5), l.get(7)));
            }

            //System.out.println(p);
        } 
        else 
        {
            JOptionPane.showMessageDialog(null,"You aren't holding any stocks!!","No Stocks",JOptionPane.WARNING_MESSAGE);

        }

        Table<String> meh = new Table<String>();
        meh.addRow(Arrays.asList("c", "Continue"));
        //Prompt.menuPrompt(meh);

    }
     
     private void lotPrint(StructuredTable p, int col) {
        if (p != null && !p.isEmpty()) {
            //p.sort(col, ascending);
            Iterator i = p.iterator();

            // Find the maximum length of a string in each column
            int[] lengths = {6, 4, 12, 10, 16, 14, 0, 13};
            int n = 0;
            while (i.hasNext()) {
                int j = 0;
                for (Object elm : (List) i.next()) {
                    lengths[j] = Math.max(elm.toString().length(), lengths[j]);
                    j++;
                }
                n++;
            }
            // "TICKER" "DATE" "SHARES OWNED" "COST BASIS" "UNREALIZED GAINS" "REALIZED GAINS" "PERCENT GAINS"

            // Generate a format string
            String format = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "d "
                    + " %" + lengths[3] + ".2f "
                    + " %" + lengths[4] + ".2f "
                    + " %" + lengths[5] + ".2f "
                    + " %" + lengths[7] + ".2f\n";

            String titleFormat = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "s "
                    + " %" + lengths[3] + "s "
                    + " %" + lengths[4] + "s "
                    + " %" + lengths[5] + "s "
                    + " %" + lengths[7] + "s \n";

            i = p.iterator();

            a_lot.append(String.format(titleFormat, "TICKER", "DATE", "SHARES OWNED", "COST BASIS", "UNREALIZED GAINS", "REALIZED GAINS", "PERCENT GAINS"));

            while (i.hasNext()) {
                List l = (List) i.next();
                a_lot.append(String.format(format, l.get(0), l.get(1), l.get(2), l.get(3), l.get(4), l.get(5), l.get(7)));
            }

            //System.out.println(p);
        } else {
            JOptionPane.showMessageDialog(null,"You aren't holding any stocks!!","No Stocks",JOptionPane.WARNING_MESSAGE);
        }

        Table<String> meh = new Table<String>();
        meh.addRow(Arrays.asList("c", "Continue"));
        //Prompt.menuPrompt(meh);

    }
     
     private void closedPrint(StructuredTable p, int col) {
        if (p != null && !p.isEmpty()) {
            //p.sort(col, ascending);
            Iterator i = p.iterator();

            // Find the maximum length of a string in each column
            int[] lengths = {6, 8, 11, 16, 10, 5};
            int n = 0;
            while (i.hasNext()) {
                int j = 0;
                for (Object elm : (List) i.next()) {
                    lengths[j] = Math.max(elm.toString().length(), lengths[j]);
                    j++;
                }
                n++;
            }
            // "TICKER" "BUY DATE" "CLOSED DATE" "NUMBER OF SHARES" "COST BASIS" "GAINS"

            // Generate a format string
            String format = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "s "
                    + " %" + lengths[3] + "d "
                    + " %" + lengths[4] + ".2f "
                    + " %" + lengths[5] + ".2f\n";

            String titleFormat = " %" + lengths[0] + "s "
                    + " %" + lengths[1] + "s "
                    + " %" + lengths[2] + "s "
                    + " %" + lengths[3] + "s "
                    + " %" + lengths[4] + "s "
                    + " %" + lengths[5] + "s\n";

            i = p.iterator();

            a_closed.append(String.format(titleFormat, "TICKER", "BUY DATE", "CLOSED DATE", "NUMBER OF SHARES", "COST BASIS", "GAINS"));

            while (i.hasNext()) {
                List l = (List) i.next();
                a_closed.append(String.format(format, l.get(0), l.get(1), l.get(2), l.get(3), l.get(4), l.get(5)));
            }

            //System.out.println(p);
        } else {
            JOptionPane.showMessageDialog(null,"You haven't closed any positions...","No Closed Positions",JOptionPane.WARNING_MESSAGE);
        }

        Table<String> meh = new Table<String>();
        meh.addRow(Arrays.asList("c", "Continue"));
        //Prompt.menuPrompt(meh);

    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frame().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BidPanel;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JPanel BuyPanel;
    private javax.swing.JPanel BuyStockPanel;
    private javax.swing.JPanel ClosedPosPanel;
    private javax.swing.JPanel CreatePanel;
    private javax.swing.JPanel DisplayPanel;
    private javax.swing.JPanel EmptyPanel;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JPanel LookUpPanel;
    private javax.swing.JPanel LotViewPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MarketPanel;
    private javax.swing.JPanel OptionPanel;
    private javax.swing.JPanel PortfilioViewPanel;
    private javax.swing.JPanel PortfolioPanel;
    private javax.swing.JPanel StockLookUpPanel;
    private javax.swing.JTextArea a_buy;
    private javax.swing.JTextArea a_closed;
    private javax.swing.JTextArea a_lookup;
    private javax.swing.JTextArea a_lot;
    private javax.swing.JTextArea a_portfolio;
    private javax.swing.JButton b_cancel;
    private javax.swing.JButton b_create;
    private javax.swing.JButton b_create1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel l_stock;
    private javax.swing.JLabel l_username;
    private javax.swing.JTextField t_amount;
    private javax.swing.JTextField t_bid;
    private javax.swing.JTextField t_buy;
    private javax.swing.JTextField t_lookup;
    private javax.swing.JTextField t_password;
    private javax.swing.JTextField t_username;
    // End of variables declaration//GEN-END:variables
}
